export interface GLTFModelProps {
    /**
     *
     * The path to the GLTF file.
     *
     * @type {string}
     * @required
     * @memberof GLTFModelProps
     *
     */
    path: string;
    /**
     *
     * Whether to use Draco compression.
     *
     * @type {boolean}
     * @default false
     * @memberof GLTFModelProps
     *
     */
    draco?: boolean;
    /**
     *
     * Whether to use cast-shadow to the model.
     *
     * @type {boolean}
     * @default false
     * @memberof GLTFModelProps
     *
     */
    castShadow?: boolean;
    /**
     *
     * Whether to use receive-shadow to the model.
     *
     * @type {boolean}
     * @default false
     * @memberof GLTFModelProps
     *
     */
    receiveShadow?: boolean;
    /**
     *
     * The path to the Draco decoder.
     *
     * @type {string}
     * @default 'https://www.gstatic.com/draco/versioned/decoders/1.4.1/'
     * @memberof GLTFModelProps
     *
     */
    decoderPath?: string;
}
declare const _default: import('vue').DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    path: string;
    draco?: boolean | undefined;
    decoderPath?: string | undefined;
    castShadow?: boolean | undefined;
    receiveShadow?: boolean | undefined;
}>, {
    draco: boolean;
    castShadow: boolean;
    receiveShadow: boolean;
    decoderPath: string;
}>, {
    value: import('vue').Ref<any>;
}, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    path: string;
    draco?: boolean | undefined;
    decoderPath?: string | undefined;
    castShadow?: boolean | undefined;
    receiveShadow?: boolean | undefined;
}>, {
    draco: boolean;
    castShadow: boolean;
    receiveShadow: boolean;
    decoderPath: string;
}>>>, {
    castShadow: boolean;
    receiveShadow: boolean;
    draco: boolean;
    decoderPath: string;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
