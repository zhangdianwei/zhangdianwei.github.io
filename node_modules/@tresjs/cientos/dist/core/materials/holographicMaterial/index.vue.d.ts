import { TresColor } from '@tresjs/core';
import { Side } from 'three';
import { default as HolographicMaterial } from './HolographicMaterialParameters';

declare const _default: import('vue').DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    fresnelAmount?: number | undefined;
    fresnelOpacity?: number | undefined;
    blinkFresnelOnly?: boolean | undefined;
    enableBlinking?: boolean | undefined;
    enableAdditive?: boolean | undefined;
    hologramBrightness?: number | undefined;
    scanlineSize?: number | undefined;
    signalSpeed?: number | undefined;
    hologramOpacity?: number | undefined;
    hologramColor?: import('three').ColorRepresentation | [r: number, g: number, b: number] | undefined;
    side?: Side | undefined;
}>, {
    fresnelAmount: number;
    fresnelOpacity: number;
    blinkFresnelOnly: boolean;
    enableBlinking: boolean;
    enableAdditive: boolean;
    hologramBrightness: number;
    scanlineSize: number;
    signalSpeed: number;
    hologramOpacity: number;
    hologramColor: string;
    side: 0;
}>, {
    root: import('vue').ShallowRef<any>;
    constructor: typeof HolographicMaterial;
}, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    fresnelAmount?: number | undefined;
    fresnelOpacity?: number | undefined;
    blinkFresnelOnly?: boolean | undefined;
    enableBlinking?: boolean | undefined;
    enableAdditive?: boolean | undefined;
    hologramBrightness?: number | undefined;
    scanlineSize?: number | undefined;
    signalSpeed?: number | undefined;
    hologramOpacity?: number | undefined;
    hologramColor?: import('three').ColorRepresentation | [r: number, g: number, b: number] | undefined;
    side?: Side | undefined;
}>, {
    fresnelAmount: number;
    fresnelOpacity: number;
    blinkFresnelOnly: boolean;
    enableBlinking: boolean;
    enableAdditive: boolean;
    hologramBrightness: number;
    scanlineSize: number;
    signalSpeed: number;
    hologramOpacity: number;
    hologramColor: string;
    side: 0;
}>>>, {
    side: Side;
    fresnelOpacity: number;
    fresnelAmount: number;
    scanlineSize: number;
    hologramBrightness: number;
    signalSpeed: number;
    hologramColor: TresColor;
    enableBlinking: boolean;
    blinkFresnelOnly: boolean;
    hologramOpacity: number;
    enableAdditive: boolean;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
