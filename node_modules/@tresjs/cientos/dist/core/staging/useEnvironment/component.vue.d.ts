import { Ref } from 'vue';
import { CubeTexture, Texture } from 'three';
import { EnvironmentOptions } from './const';

declare const _default: __VLS_WithTemplateSlots<import('vue').DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<EnvironmentOptions>, {
    background: boolean;
    blur: number;
    files: never[];
    path: string;
    preset: undefined;
    resolution: number;
    near: number;
    far: number;
    frames: number;
}>, {
    texture: Ref<Texture | CubeTexture | null>;
}, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<EnvironmentOptions>, {
    background: boolean;
    blur: number;
    files: never[];
    path: string;
    preset: undefined;
    resolution: number;
    near: number;
    far: number;
    frames: number;
}>>>, {
    path: string;
    blur: number;
    resolution: number;
    far: number;
    frames: number;
    near: number;
    preset: "sunset" | "studio" | "city" | "umbrellas" | "night" | "forest" | "snow" | "dawn" | "hangar" | "urban" | "modern" | "shangai";
    files: string | string[];
    background: string | boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
