import { Texture, Color } from 'three';

declare const _default: import('vue').DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    args?: any[] | undefined;
    from?: 'circle' | 'ring' | 'rect' | any;
    toneMapped?: boolean | undefined;
    map?: Texture | undefined;
    intensity?: number | undefined;
    color?: any;
}>, {
    args: any;
    from: string;
    toneMapped: boolean;
    map: any;
    intensity: number;
    color: Color;
}>, {}, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    args?: any[] | undefined;
    from?: 'circle' | 'ring' | 'rect' | any;
    toneMapped?: boolean | undefined;
    map?: Texture | undefined;
    intensity?: number | undefined;
    color?: any;
}>, {
    args: any;
    from: string;
    toneMapped: boolean;
    map: any;
    intensity: number;
    color: Color;
}>>>, {
    map: Texture;
    color: any;
    args: any[];
    toneMapped: boolean;
    from: 'circle' | 'ring' | 'rect' | any;
    intensity: number;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
