import { MeshBasicMaterial, Vector3, Mesh, Object3D, Scene } from 'three';

export declare function toSetMethodName(key: string): string;
export declare const merge: (target: any, source: any) => any;
export declare const isHTMLTag: (key: string) => boolean;
export declare function isDOMElement(obj: any): obj is HTMLElement;
export declare function kebabToCamel(str: string): string;
export declare function makeMap(str: string, expectsLowerCase?: boolean): (key: string) => boolean;
export declare const uniqueBy: <T, K>(array: T[], iteratee: (value: T) => K) => T[];
export declare const get: <T>(obj: any, path: string | string[]) => T | undefined;
export declare const set: (obj: any, path: string | string[], value: any) => void;
export declare function deepEqual(a: any, b: any): boolean;
export declare function deepArrayEqual(arr1: any[], arr2: any[]): boolean;
/**
 * TypeSafe version of Array.isArray
 */
export declare const isArray: (a: any) => a is any[] | readonly any[];
export declare function editSceneObject(scene: Scene, objectUuid: string, propertyPath: string[], value: any): void;
export declare function createHighlightMaterial(): MeshBasicMaterial;
export declare function animateHighlight(highlightMesh: Mesh, startTime: number): void;
export declare function stopHighlightAnimation(): void;
export declare function createHighlightMesh(object: Object3D): Mesh;
export declare function extractBindingPosition(binding: any): Vector3;
